{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","movie","className","alt","src","posterUrl","title","year","runtime","CardList","movies","map","id","SearchBox","placeholder","handleChange","type","onChange","App","useState","setMovies","search","setSearch","useEffect","fetch","then","response","json","filteredMovies","filter","toLowerCase","includes","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iRAceA,G,kBAXF,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACd,OACE,sBAAKC,UAAU,iBAAf,UACI,qBAAKA,UAAU,aAAaC,IAAI,QAAQC,IAAKH,EAAMI,YACnD,oBAAIH,UAAU,YAAd,SAA2BD,EAAMK,QACjC,qBAAIJ,UAAU,YAAd,oBAAkCD,EAAMM,QACxC,qBAAIL,UAAU,YAAd,sBAAoCD,EAAMO,QAA1C,eCKOC,EAVE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClB,OAAO,qBAAKR,UAAU,YAAf,SAEDQ,EAAOC,KAAI,SAAAV,GACV,OAAO,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMW,UCMlBC,G,MAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBACEb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC2BDG,MA9Bf,WAAgB,IAAD,EACeC,mBAAS,IADxB,mBACNT,EADM,KACEU,EADF,OAEeD,mBAAS,IAFxB,mBAENE,EAFM,KAEEC,EAFF,KAIbC,qBAAU,WACRC,MACE,6EAECC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACf,GAAD,OAAYU,EAAUV,EAAOA,aACpC,IAIH,IAAMkB,EAAiBlB,EAAOmB,QAAO,SAAC5B,GACpC,OAAOA,EAAMK,MAAMwB,cAAcC,SAASV,EAAOS,kBAGnD,OACE,sBAAK5B,UAAU,MAAf,UACE,4CACA,cAAC,EAAD,CACEY,YAAY,gBACZC,aAAc,SAACiB,GAAD,OAAOV,EAAUU,EAAEC,OAAOC,UAE1C,cAAC,EAAD,CAAUxB,OAAQkB,QCnBTO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5a7e5808.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.css';\r\n\r\nconst Card = ({ movie }) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n        <img className=\"card-image\" alt=\"movie\" src={movie.posterUrl} />\r\n        <h2 className=\"card-info\">{movie.title}</h2>\r\n        <h4 className=\"card-info\"> Year: {movie.year}</h4>\r\n        <h5 className=\"card-info\">Runtime: {movie.runtime} min</h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./card-list.css\";\r\nimport Card from '../card/card';\r\n\r\nconst CardList = ({ movies }) => {\r\n  return <div className=\"card-list\">\r\n       {\r\n        movies.map(movie => {\r\n         return <Card key={movie.id} movie={movie} />\r\n        })\r\n      }\r\n  </div>;\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport \"./search.css\";\r\n\r\nconst SearchBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      onChange={handleChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport CardList from \"./components/card-list/card-list\";\nimport SearchBox from \"./components/search/search\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\n      \"https://raw.githubusercontent.com/cipriancozma/movies-list/master/db.json\"\n    )\n      .then((response) => response.json())\n      .then((movies) => setMovies(movies.movies));\n  }, []);\n\n  // to display a message if we don't find movies\n  // filter on genres\n  const filteredMovies = movies.filter((movie) => {\n    return movie.title.toLowerCase().includes(search.toLowerCase());\n  });\n\n  return (\n    <div className=\"App\">\n      <h2>Movies App</h2>\n      <SearchBox\n        placeholder=\"search movies\"\n        handleChange={(e) => setSearch(e.target.value)}\n      />\n      <CardList movies={filteredMovies} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}